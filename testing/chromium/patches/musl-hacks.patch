diff --git a/mojo/public/c/system/thunks.cc b/mojo/public/c/system/thunks.cc
index b8f8ff4..4a5914c 100644
--- a/mojo/public/c/system/thunks.cc
+++ b/mojo/public/c/system/thunks.cc
@@ -104,7 +104,8 @@ class CoreLibraryInitializer {
     base::ScopedAllowBlocking allow_blocking;
     base::NativeLibraryOptions library_options;
 #if !defined(ADDRESS_SANITIZER) && !defined(THREAD_SANITIZER) && \
-    !defined(MEMORY_SANITIZER) && !defined(LEAK_SANITIZER)
+    !defined(MEMORY_SANITIZER) && !defined(LEAK_SANITIZER) && \
+    defined(RTLD_DEEPBIND)
     // Sanitizer builds cannnot support RTLD_DEEPBIND, but they also disable
     // allocator shims, so it's unnecessary there.
     library_options.prefer_own_symbols = true;
diff --git a/net/socket/udp_socket_posix.cc b/net/socket/udp_socket_posix.cc
index d64824e..79e7849 100644
--- a/net/socket/udp_socket_posix.cc
+++ b/net/socket/udp_socket_posix.cc
@@ -1110,7 +1110,7 @@ SendResult UDPSocketPosixSender::InternalSendmmsgBuffers(
     msg_iov->push_back({const_cast<char*>(buffer->data()), buffer->length()});
   msgvec->reserve(buffers.size());
   for (size_t j = 0; j < buffers.size(); j++)
-    msgvec->push_back({{nullptr, 0, &msg_iov[j], 1, nullptr, 0, 0}, 0});
+    msgvec->push_back({{nullptr, 0, &msg_iov[j], 1, 0, 0, 0}, 0});
   int result = HANDLE_EINTR(Sendmmsg(fd, &msgvec[0], buffers.size(), 0));
   SendResult send_result(0, 0, std::move(buffers));
   if (result < 0) {
