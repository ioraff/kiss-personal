--- a/compiler/rustc_session/src/config.rs
+++ b/compiler/rustc_session/src/config.rs
@@ -1612,7 +1612,7 @@
                 early_error(error_format, &format!("target file {:?} does not exist", path))
             })
         }
-        Some(target) => TargetTriple::TargetTriple(target),
+        Some(target) => TargetTriple::from_alias(target),
         _ => TargetTriple::from_triple(host_triple()),
     }
 }
--- a/compiler/rustc_target/src/spec/mod.rs
+++ b/compiler/rustc_target/src/spec/mod.rs
@@ -2380,6 +2380,14 @@
         Ok(TargetTriple::TargetPath(canonicalized_path))
     }

+    /// Creates a target triple from its alias
+    pub fn from_alias(triple: String) -> Self {
+        match triple.as_str() {
+            "x86_64-pc-linux-musl" => TargetTriple::from_triple("x86_64-unknown-linux-musl"),
+            _ => TargetTriple::TargetTriple(triple),
+        }
+    }
+
     /// Returns a string triple for this target.
     ///
     /// If this target is a path, the file name (without extension) is returned.
--- a/compiler/rustc_target/src/spec/x86_64_unknown_linux_musl.rs
+++ b/compiler/rustc_target/src/spec/x86_64_unknown_linux_musl.rs
@@ -15,7 +15,7 @@
         | SanitizerSet::THREAD;

     Target {
-        llvm_target: "x86_64-unknown-linux-musl".to_string(),
+        llvm_target: "x86_64-pc-linux-musl".to_string(),
         pointer_width: 64,
         data_layout: "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
             .to_string(),
